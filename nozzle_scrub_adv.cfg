#######################################################################################################################################

# Sample macro config to be used in conjunction with the Decontaminator Purge Bucket & Nozzle Scrubber mod. Created by Hernsl 
# (hernsl#8860 on Discord) and edited by Edwardyeeks (edwardyeeks#6042 on Discord). Several ideas that made it as features by
# Deutherius (deutherius#3295 on Discord).

# The goal of this macro is to provide a nozzle scrubbing and purging routine that is easily copied/referenced into your  printer.cfg.
# Users can simply change parameters and enable/disable options in the first half. Descriptions are plentiful, making this macro
# look huge but informative and are laid out in sequence to be read first describing the line below; PLEASE READ CAREFULLY.

# This sample config assumes the following: The user has implemented the default decontaminator purge bucket & nozzle scrubber mod
# for the VORON 1/2. It can be tweaked to customised purge bucket geometries and brushes.

# Features in this macro: option of putting the bucket at the rear or front of the bed. Purge routine that can be enabled/disabled.
# By default, bucket is located at rear left of bed and purge routine is enabled. The purge and scrubbing routine is randomized
# in either left or right bucket to ensure as even as possible distribution of filament gunk.

# Default parameters are set for safe speeds and movements. Where necessary, tweak the parameters for the nozzle scrub procedure 
# to fit your printer.

# To avoid adding length of lines to your main printer.cfg config file, one can upload a config file separately into klipper and
# include it into the main printer config. Upload nozzle_scrub.cfg to the same directory as printer.cfg. Usually, it is in /home/pi/.
# Users of Fluidd, Mainsail and other klipper front ends would find it under /home/pi/klipper_config/.

# Once uploaded, add the following to your printer.cfg in the Macros section: [include /home/pi/nozzle_scrub.cfg] 
# Those running Fluidd, Mainsail and other front ends will need to use the following location instead:
# [include /home/pi/klipper_config/nozzle_scrub.cfg]

#######################################################################################################################################

# Name of the macro is clean_nozzle.

[gcode_macro clean_nozzle]

# If you are putting your purge bucket at the rear left of the bed as per default installation, enable True on your location_bucket_rear 
# variable. If you want to put your purge bucket elsewhere (perhaps the front), then set it to False. See diagrams and description 
# further below on how to set your XY position.
variable_location_bucket_rear:      False

# If you want the purging routine in your bucket enabled, set to True (and vice versa).
variable_enable_purge:              False

# If you want a hot to cold cleaning enabled, set to True (and vice versa).
variable_enable_hotcold:            False


# These parameters define your filament purging. The retract variable is used to retract right after purging to prevent unnecessary
# oozing. Some filament are particularly oozy and may continue to ooze out of the nozzle for a second or two after retracting. The
# ooze dwell variable makes allowance for this. Update as necessary. If you decided to not enable purge, you can ignore this section.
variable_purge_len:            15	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/min, of the purge.
variable_purge_temp_min:      170	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:             0            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            0            ; Dwell/wait time, in seconds, after purging and retracting.

# Adjust this so that your nozzle scrubs within the brush. Currently defaulted to be a lot higher for safety. Be careful not to go too low!
variable_brush_top:            1.5 
variable_brush_deep_max:       -2  

# These parameters define your scrubbing, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary. Wipe 
# direction is randomized based off whether the left or right bucket is randomly selected in the purge & scrubbing routine.
variable_clearance_z:           5	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              5	         ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
variable_prep_spd_xy:        12000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        5000	         ; Nozzle wipe speed in mm/min.


# These parameters define the size of the brush. Update as necessary. A visual reference is provided below. Note that orientation of 
# parameters remain the same whether bucket is at rear or front.
# 
#                  ←   brush_width   →                            
#                   _________________                                                          ↑
#                  |                 |  ↑                     If you chose location_bucket_rear = True, Y position is acquired
#  brush_start (x) |                 | brush_depth            from your stepper_y position_max. Adjust your brush physically in
#                  |_________________|  ↓                               Y so that the nozzle scrubs within the brush.       
#                          (y)                                                                 ↓
#                      brush_front
# __________________________________________________________
#                     PRINTER FRONT
# 
# 
## For V1.8, you may need to measure where your brush is on the x axis and input manually into any of the variable_brush_start uncommented.
## For V2.4 250mm build, uncomment this below: 
#variable_brush_start:     25	    

## For V2.4 300mm build, uncomment this below:
#variable_brush_start:     50

## For V2.4 350mm build, uncomment this below:
#variable_brush_start:     75
variable_brush_start:      51

# This value is defaulted from brush location in CAD (rear left). Change if your brush width is different.
variable_brush_width:      52	

## These are only used if location_bucket_rear is False. You specify a custom location in y axis for your brush - see diagram above. ##
variable_brush_front:       180          
variable_brush_depth:       5          

variable_brush_segments:    20          
        


# These parameters define the size of your purge bucket. Update as necessary. If you decided to not enable purge, you can ignore 
# this section. A visual reference is provided below. Note that orientation of parameters remain the same whether bucket is at rear 
# or front.
# 
#                                     bucket_gap
#                                      ← ---- →
#                     __________________________________________
#                    |                 |      |                 |      
#                    |                 |      |                 |
#  bucket_start (x)  |                 |______|                 |
#                    |                 |      |                 |
#                    |                 |      |                 |
#                    |_________________|. . . |_________________|
#                     ← ------------- →        ← ------------- →
#                     bucket_left_width        bucket_right_width
#  _______________________________________________________________________________________
#                                    PRINTER FRONT
# 
## For V2.4 250mm build, uncomment below 
#variable_bucket_left_width:    42

## For V2.4 300mm build, uncomment below
#variable_bucket_left_width:    67

## For V2.4 350mm build, uncomment below
variable_bucket_left_width:    59 

# These values are defaulted from bucket geometry in CAD (rear left location). Change only if you're using a custom bucket.
variable_bucket_right_width:   91            
variable_bucket_gap:           21	

# For V1.8, you may need to measure where your bucket start is and input into bucket_start. Otherwise, a value of 0 is for a default
# installation of purge bucket at rear left.
variable_bucket_start:         5


###############################################################################################################################################
###############################################################################################################################################

### From here on, unless you know what you're doing, it's recommended not to change anything. Feel free to peruse the code and reach out to me
### (edwardyeeks#6042) on Discord if you spot any problems!

###############################################################################################################################################
###############################################################################################################################################

# Placeholder. The variable will later be set to contain, at random, a number representing the left or right bucket.
variable_bucket_pos:            1	        

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 0 = left, 1 = right
         SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(2) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}

         ### Check if user chose to use rear location.
         {% if location_bucket_rear %}
            G1 Y{Ry} F{prep_spd_xy}
         {% else %}
            G1 Y{brush_front + (brush_depth / 2)} F{prep_spd_xy}
         {% endif %}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / (2 - bucket_pos)) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro. Small retract after
         ### purging to minimize any persistent oozing at 5x purge_spd. G4 dwell is in milliseconds, hence * 1000 in formula.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G1 E-{purge_ret} F{purge_spd * 5}
            G4 P{ooze_dwell * 1000}
            G92 E0   ; reset extruder
      {% endif %}

      {% endif %}

      ## Set wipe backoffice
      {% set brush_step = brush_width / brush_segments %}
      {% set brush_lanes = [ brush_front, brush_front+brush_depth/3, brush_front+brush_depth/3*2, brush_front+brush_depth ] %}
      {% set brush_zhop  = (brush_top - brush_deep_max) /5 %}
      {% set brush_hops  = [ brush_top, brush_top-brush_zhop, brush_top-brush_zhop*2, brush_top-brush_zhop*3, brush_top-brush_zhop*4, brush_top-brush_zhop*5 ] %}

      ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start + (brush_width * bucket_pos)} F{prep_spd_xy}

      ## Check if user chose to use rear location.
      {% if location_bucket_rear %}
         G1 Y{Ry}
      {% else %}
         G1 Y{brush_front + (brush_depth / 2)}
      {% endif %}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
      G1 F{wipe_spd_xy}
      SET_GCODE_VARIABLE MACRO=_clean_nozzle_move  VARIABLE=move VALUE=True
      {% for wipes in range(1, (wipe_qty + 1)) %}
          {%for segments in range(1, (brush_segments+1)) %}
              _clean_nozzle_move X={brush_start + brush_width*bucket_pos + (1-2*bucket_pos)*brush_step*segments } Y={brush_lanes[range(4)|random]} Z={brush_hops[range(6)|random]}
          {% endfor %}
          {%for segments in range(1, (brush_segments+1)) %}
              _clean_nozzle_move X={brush_start + brush_width*(1-bucket_pos) - (1-2*bucket_pos)*brush_step*segments } Y={brush_lanes[range(4)|random]} Z={brush_hops[range(6)|random]}
          {% endfor %}
          {% if enable_hotcold == True %}
              _clean_nozzle_cooldown_check
          {% endif %}
      {% endfor %}

   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G91
      G1 X{bucket_left_width / 4} F{prep_spd_xy} 

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}


###############################################################################################################################################
###############################################################################################################################################

[gcode_macro _clean_nozzle_move]
variable_move: True
gcode:
    
    {% if move == True %}
          {% set x = params.X %}
          {% set y = params.Y %}
          {% set z = params.Z %}
          G1 X{x} Y{y} Z{z}
    {% endif %}

[gcode_macro  _clean_nozzle_cooldown_check]
gcode:
  {% set extruder_temperature = printer[printer.toolhead.extruder].temperature %}
  {% set extruder_target = printer[printer.toolhead.extruder].target %}
  {% if extruder_temperature <= extruder_target %}
        SET_GCODE_VARIABLE MACRO=_clean_nozzle_move  VARIABLE=move VALUE=False
  {% endif %}

###############################################################################################################################################
###############################################################################################################################################

[gcode_macro CLEAN_HOTCOLD]
variable_temperature_offset:   30 
gcode:
    {% set extruder_target = printer[printer.toolhead.extruder].target %}
    {% set extruder_temperature = printer[printer.toolhead.extruder].temperature %}
    {% set cooltemp_target = extruder_target - temperature_offset %}
    {% set min_extrude_temp = printer.configfile.settings.extruder.min_extrude_temp %}
    {% if extruder_target >= min_extrude_temp and extruder_temperature >= min_extrude_temp %}
        SAVE_GCODE_STATE NAME=STATE_CLEAN
        SET_GCODE_OFFSET Z=0.0                                                        ; reset the G-Code Z offset (adjust Z offset if needed)
        SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=wipe_qty VALUE=100            ; do enough wipes so the nozzle has time to cool down
        SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=enable_purge VALUE=False      ; no purge
        SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=enable_hotcold VALUE=True     ; hot to cold cleaning
        M109 S{extruder_target}                                                       ; wait for extruder to reach the target temperature
        M104 S{cooltemp_target}                                                       ; cool down during wipes to prevent oozing after wipes
        M106 S256                                                                     ; set fan speed to max to help cooling
        G4 P{10 * 1000}                                                               ; dwell time to spare nozzle a bit
        CLEAN_NOZZLE                                                                  ; start cleaning
        M106 S0                                                                       ; stop part cooling fan
        SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=enable_hotcold VALUE=False    ; hot to cold cleaning off
        RESTORE_GCODE_STATE NAME=STATE_CLEAN
    {% endif %}

[gcode_macro CLEAN_PURGE]
gcode:
    SAVE_GCODE_STATE NAME=STATE_CLEAN
    SET_GCODE_OFFSET Z=0.0  
    SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=wipe_qty VALUE=5
    SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=enable_purge VALUE=True
    SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=purge_len VALUE=100
    CLEAN_NOZZLE
    RESTORE_GCODE_STATE NAME=STATE_CLEAN

[gcode_macro CLEAN_PRIME]
gcode:
    SAVE_GCODE_STATE NAME=STATE_CLEAN
    SET_GCODE_OFFSET Z=0.0  
    SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=wipe_qty VALUE=5
    SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=enable_purge VALUE=True
    SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=purge_len VALUE=25
    CLEAN_NOZZLE
    RESTORE_GCODE_STATE NAME=STATE_CLEAN

[gcode_macro CLEAN_NOPURGE]
gcode:
    SAVE_GCODE_STATE NAME=STATE_CLEAN
    SET_GCODE_OFFSET Z=0.0  
    SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=wipe_qty VALUE=3
    SET_GCODE_VARIABLE MACRO=clean_nozzle  VARIABLE=enable_purge VALUE=False
    CLEAN_NOZZLE
    RESTORE_GCODE_STATE NAME=STATE_CLEAN
